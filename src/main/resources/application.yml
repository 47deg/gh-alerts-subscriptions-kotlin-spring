server:
  port: ${PORT:8080}
  address: ${host:0.0.0.0}
  servlet:
    context-path: /

github:
  url: ${GITHUB_URL:https://api.github.com}
  token: ${GITHUB_TOKEN}

kafka:
  bootstrapServers: ${BOOTSTRAP_SERVERS:localhost:9092}
  schemaRegistryUrl: ${SCHEMA_REGISTRY_URL:http://localhost:8081}

  consumer:
    groupId: github-event-consumer
    autoOffsetReset: earliest
    enableAutoCommit: false

  producer:
    acks: 1

  subscription:
    name: ${SUBSCRIPTION_TOPIC:subscriptions}
    numPartitions: 1
    replicationFactor: 1

  event:
    name: ${EVENT_TOPIC:events}
    numPartitions: 1
    replicationFactor: 1

  notification:
    name: ${NOTIFICATION_TOPIC:notifications}
    numPartitions: 1
    replicationFactor: 1

spring:
  application:
    name: gh-alerts-subscriptions-kotlin
  config:
    import: optional:file:.env[.properties]
  r2dbc:
    url: ${POSTGRES_R2DBC_URL:r2dbc:postgresql://localhost:5432/alerts}
    username: ${POSTGRES_USER:test}
    password: ${POSTGRES_USER:test}
    properties:
      schema: subscriptions
  flyway:
    url: ${POSTGRES_JDBC_URL:jdbc:postgresql://localhost:5432/alerts}
    schemas: subscriptions
    user: ${POSTGRES_USER:test}
    password: ${POSTGRES_USER:test}

springdoc:
  enable-native-support: true
  show-actuator: true
  swagger-ui:
    use-root-path: true

management:
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState, r2dbc, kafka, flyway
  health:
    ping:
      enabled: false
    diskspace:
      enabled: false
    livenessState:
      enabled: true
    readinessState:
      enabled: true
